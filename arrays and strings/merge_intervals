# Leetcode 56 Merge Intervals 
# Algomap Arrays and Strings 8
class Solution:
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
        # intervals is now sorted by the first elem in each
        intervals.sort(key = lambda interval: interval[0])
        merged = []
        for interval in intervals:
            # if we havent done any merged or the last element of
            # the most recent interval in merged is 
            # less than the first element of the current interval
            # just add the interval
            if not merged or merged[-1][1] < interval[0]:
                merged.append(interval)
            # otherwise a merge is necessary
            # make sure to take the max of the interval ends
            else:
                new_interval = [merged[-1][0], max(interval[1], merged[-1][1])]
                merged.pop()
                merged.append(new_interval)
        return merged
        